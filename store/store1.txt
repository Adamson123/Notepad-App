 <div class="bookmark">
      <span class="bi-dot bookdot"></span>
      <span class="bi-bookmark bookmarkAdd"></span>
</div>

<!-- // const searchTerm = "h";
// const text = "Hellohellohilol";

// const regex = new RegExp(searchTerm, "gi");
// const matches = text.match(regex);

// console.log(matches);
// console.log(text.lastIndexOf("H"));

// let html = "";

// for (let i = 0; i < 9; i++) {
//   html += `
//     <div class="note">
//     <div class="noteHead">Birthday</div>
//     <div class="dateAnddeleteBtn">
//     <div class="date">8:24</div>

//     <!-- <div class="delete">Delete</div> -->
<!-- //   </div>
//     <div class="textNote">Lorem, adipisicing.
//      te neque sit,red yellow green, adipisicing.
//    te neque sit,red yellow green.
//    </div>

//    <div class="calendarBox">
//    <!--<span class="bi-dot bookdot"></span>-->
    <!-- <span class="bi-calendar"></span>

  </div>
   </div>
     `;
 }   -->

 position: fixed;
  right: 50%;
  bottom: 10%;
  transform: translate(50%, 10%);


  /* .checkNote::after {
  content: "";
  background-color: var(--notes-color);
  position: absolute;
  right: 3px;
  left: 4px;
  top: 3px;
  bottom: 3.1px;
  border-radius: 3px;
  pointer-events: none;

} */

{
    index:0,
    header: "ok",
    note: "kkkkkðŸ§‘",
    dateCreated: `${date}`,
    dateEdited: `${date}`,
    checked : false,
}
/* .addBtn > span:nth-child(3) {
  position: absolute;
  width: 52px;
  height: 54px;
  background-color: var(--sec-color);
  border-radius: 50%;
  z-index: -3;
  clip-path: circle(100% at 50% -50%);
  border: 5px solid var(--navbar-border);
} */




///////////////////////////////

export function renderNotes(parameter) {


  if (parameter === false || parameter === true) {
    multiSelecting = parameter;
  }

  let html = ""; 
  let searchBarValue = searchBar.value.trim(' ');
  let foundMatch = false;

  //checks if there's any note availabe in the notes array
  if (notes.length !== 0) {
    notes.forEach((i, num) => {

      i['index'] = num

      const {header, note, dateCreated, dateEdited, checked , index } = i;

      console.log(i);


      //if there's no header to display we will take from the first word of the note
      let headAlt = header === "" ? note.split(" ")[0] : header;

      //shortens the first word if it's too long to contain the note header
      let headAlt_2 =
        headAlt.length > 35 ? headAlt.slice(0, 27).concat("...") : headAlt;

      let checkClass = checked === false ? "check" : "checkActive";

      let newClass;
      if (multiSelecting === false) {
        newClass = "not-acive";
      } else {
        newClass = "active";
      }
      if (
        headAlt_2.toLocaleLowerCase().includes(searchBarValue) &&
        searchBarValue !== ' '
      ) {
        foundMatch = true;
        html += `
        <div class="note uniNote${num}" data-index="${index}">
          <div class="noteHead">${headAlt_2}</div>
          <div class="dateDiv">
            <div class="date">Created: ${dateCreated}</div>
            <div>Last Edited: ${dateEdited} </div>
          </div>
          <div class="textNote">
            ${note}
          </div>
          <div class="trashAndCheckNoteDiv">
            <span class="bi-trash deleteBtn" data-index="${index}"></span>
            <span class="checkNote ${newClass}"><!--<input type="checkbox" class="checkNoteBox"/>-->
            <span class="bi-check  ${checkClass}">
            </span>
            </span>
          </div>
        </div>
        `;
      }
    });

    if (!foundMatch && searchBarValue !== " ") {
      notesBox.innerHTML = `<div class='noNotes'>
      No result found &nbsp;:(
    </div>`;
    } else {
      notesBox.innerHTML = html;
    }
  }
  //if there are no notes display this ðŸ‘‡
  else {
    notesBox.innerHTML = `<div class='noNotes'>
      No notes available &nbsp;:(
    </div>`;
  }

  clickEventOnNotes(multiSelecting);
  clickEventOnNotesDeleteIcons();
  eventlistenerOnMultiselectBtn();
  eventlistenerOndeleteAllBtn();
  searchNote();

}



//newIndex format ðŸ˜Š
let  newIndex;

// if(newIndex !== index){
      //   newIndex = index
      //  // console.log(newIndex);
      //   turnIt(index)
      //   t = 0;

      // }else {
      //   newIndex++
      // }



// T format ðŸ˜Ž

let t = 0;

  // if (t < 1) {
      //   t++;
      //   turnIt(index);
      // } else {
      //   t = 0;
  // }





import getDate from "./utils/date.js";
import { showElement, hideElement } from "./utils/openAndCloseFunctions.js";

const date = `${getDate("hour")}:${getDate("day")}:${getDate("year")}`;

const deletedNotesArray = [
  {
    header: "Food",
    note: "king kong king okg kog",
    dateDeleted: `${date}`,
    checked: false,
  },

  {
    header: "Satty",
    note: `king kong king okg kog king kong king okg kog king kong king okg 
    kog king kong king okg kog king kong king okg kog
    kog king kong king okg kog king kong king okg 
    kog king kong king okg kog king kong king okg kog
    `,

    dateDeleted: `${date}`,
    checked: false,
  },

  {
    header: "Sky",
    note: `king kong king okg kog king kong king okg kog king kong king okg 
    kog king kong king okg kog king kong king okg kog
    kog king kong king okg kog king kong king okg 
    kog king kong king okg kog king kong king okg kog
    `,

    dateDeleted: `${date}`,
    checked: false,
  },
  {
    header: "Lod",
    note: "king kong king okg kog",
    dateDeleted: `${date}`,
    checked: false,
  },

  {
    header: "Satty",
    note: `king kong king okg kog king kong king okg kog king kong king okg 
    kog king kong king okg kog king kong king okg kog
    kog king kong king okg kog king kong king okg 
    kog king kong king okg kog king kong king okg kog
    `,

    dateDeleted: `${date}`,
    checked: false,
  },

  {
    header: "Kty",
    note: `king kong king okg kog king kong king okg kog king kong king okg 
    kog king kong king okg kog king kong king okg kog
    kog king kong king okg kog king kong king okg 
    kog king kong king okg kog king kong king okg kog
    `,

    dateDeleted: `${date}`,
    checked: false,
  },
  {
    header: "Kty",
    note: `king kong king okg kog king kong king okg kog king kong king okg 
    kog king kong king okg kog king kong king okg kog
    kog king kong king okg kog king kong king okg 
    kog king kong king okg kog king kong king okg kog
    `,

    dateDeleted: `${date}`,
    checked: false,
  },
];

let checked = [];

function rotateChevron(index) {
  const chevron = document.querySelectorAll(".chevron");
  chevron[index].classList.toggle("chevActive");
}

function openSnip(index) {
  const noteSnip = document.querySelectorAll(".noteSnip");
  noteSnip[index].classList.toggle("hideSnip");
  noteSnip[index].classList.toggle("noteSnipActive");
}

function allExpanded(index) {
  let newCheck = [];
  if (checked.includes(index)) {
    checked.forEach((i, int) => {
      if (i !== index) {
        newCheck.push(i);
      }
    });

    checked = newCheck;
  } else {
    checked.push(index);
    console.log("ppp");
  }

  console.log(checked);
}

export function renderDelNotes() {
  const deletedNote = document.querySelectorAll(".deletedNote");
  const leftColumnDelNotes = document.querySelector(".leftColumnDelNotes");
  const rightColumnDelNotes = document.querySelector(".rightColumnDelNotes");
  const allDelNotes = document.querySelector(".allDelNotes");
  let leftColumn = "";
  let rightColumn = "";
  let allColumns = "";
  deletedNotesArray.forEach((i, int) => {
    const { header, note, dateDeleted, checked } = i;
    if (window.innerWidth < 625) {
      allColumns += `
    <div class="deletedNote delNote2">
    <div for="openNote3" class="deletedNLabel expandNote">
      <div class="title">
        <div>${header}</div>
      </div>
      <div class="del_ResDiv">
        <span class="bi-x deletePm"></span>

        <img
          src="svgs/restore-svgrepo-com (1).svg"
          class="restoreSvg"
        />
        <span class="bi-chevron-up chevron"></span>
      </div>
    </div>

    <div class="noteSnip hideSnip">
      Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fugit
      enim, rem accusantium temporibus non minus mollitia illum ad ab
      molestiae consequatur reiciendis cum eos eum, cumque possimus
      repellat officiis distinctio?
    </div>
  </div>
    `;
    } else {
      if (int % 2 === 0) {
        leftColumn += `
      <div class="deletedNote delNote2">
      <div for="openNote3" class="deletedNLabel expandNote">
        <div class="title">
          <div>${header}</div>
        </div>
        <div class="del_ResDiv">
          <span class="bi-x deletePm"></span>
  
          <img
            src="svgs/restore-svgrepo-com (1).svg"
            class="restoreSvg"
          />
          <span class="bi-chevron-up chevron"></span>
        </div>
      </div>
  
      <div class="noteSnip hideSnip">
        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fugit
        enim, rem accusantium temporibus non minus mollitia illum ad ab
        molestiae consequatur reiciendis cum eos eum, cumque possimus
        repellat officiis distinctio?
      </div>
    </div>
      `;
      } else {
        rightColumn += `
      <div class="deletedNote delNote2">
      <div for="openNote3" class="deletedNLabel expandNote">
        <div class="title">
          <div>${header}</div>
        </div>
        <div class="del_ResDiv">
          <span class="bi-x deletePm"></span>
  
          <img
            src="svgs/restore-svgrepo-com (1).svg"
            class="restoreSvg"
          />
          <span class="bi-chevron-up chevron"></span>
        </div>
      </div>
  
      <div class="noteSnip hideSnip">
        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fugit
        enim, rem accusantium temporibus non minus mollitia illum ad ab
        molestiae consequatur reiciendis cum eos eum, cumque possimus
        repellat officiis distinctio?
      </div>
    </div>
      `;
      }
    }
  });

  allDelNotes.innerHTML = allColumns;
  rightColumnDelNotes.innerHTML = rightColumn;
  leftColumnDelNotes.innerHTML = leftColumn;

  eventlistenerOnNotesLabel();
  open();
}

function eventlistenerOnNotesLabel() {
  const expandNote = document.querySelectorAll(".expandNote");
  expandNote.forEach((i, index) => {
    i.addEventListener("click", () => {
      allExpanded(index);
      rotateChevron(index);
      openSnip(index);
      open();
    });
  });
}

function open() {
  const noteSnip = document.querySelectorAll(".noteSnip");

  noteSnip.forEach((i, index) => {
    if (checked.includes(index)) {
      i.classList.remove("hideSnip");
      i.classList.add("noteSnipActive");
      console.log(index);
      console.log(i);
    } else {
      i.classList.add("hideSnip");
      i.classList.remove("noteSnipActive");
    }
  });
}

window.onresize = () => {
  renderDelNotes();
  open();
};


// function staticIndex() {
//   notes.forEach((i,index) =>{
//     i['staticindex'] = index
//   })
// }

// staticIndex()


  <div class="customizeThemeMenu customizeThemeMenu-js">
        <div class="customizeThemeMenu_sec">
          <div class="hideCustomTheme">
            <span class="bi-x"></span>
          </div>

          <div class="customizeTheme_secChild">
            <label for="">Second color</label>
            <div class="allSecColors"></div>
          </div>

          <div class="customizeTheme_secChild">
            <label for="">Background color</label>
            <input type="color" class="bgColor" />
          </div>
          <div class="customizeTheme_secChild">
            <label for="">Note color</label>
            <input type="color" class="noteColor" />
          </div>

          <div class="customizeTheme_secChild">
            <label for="">Text color</label>
            <input type="color" class="textColor" />
          </div>
        </div>
      </div>




      // notes.forEach((i, index) => {
  //   if (i.checked === true) {
  //     checked++
  //   }
  // });

let checked = 0